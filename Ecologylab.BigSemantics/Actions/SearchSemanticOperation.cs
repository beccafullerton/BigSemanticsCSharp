//
//  SearchSemanticAction.cs
//  s.im.pl serialization
//
//  Generated by DotNetTranslator on 11/16/10.
//  Copyright 2010 Interface Ecology Lab. 
//

using System;
using System.Collections.Generic;
using Simpl.Serialization.Attributes;
using Ecologylab.BigSemantics.Actions;

namespace Ecologylab.BigSemantics.Actions 
{
	/// <summary>
	/// missing java doc comments or could not find the source file.
	/// </summary>
	[SimplInherit]
	[SimplTag("search")]
    public class SearchSemanticOperation : SemanticOperation 
	{
		/// <summary>
		/// missing java doc comments or could not find the source file.
		/// </summary>
		[SimplScalar]
		private String engine;

		public SearchSemanticOperation()
		{ }

		public String Engine
		{
			get{return engine;}
			set{engine = value;}
		}

        protected static readonly String ArgQuery = "query";

	    public override String GetOperationName()
	    {
		    return SemanticOperationStandardMethods.Search;
	    }

	    public override void HandleError()
	    {
	    }

	    public override Object Perform(Object obj)
	    {
            String query = (String)GetArgumentObject(ArgQuery);
		    if (String.IsNullOrEmpty(query))
			    return null;

/*		    SearchState search = new SearchState(query, engine);
		    search.initialize(sessionScope);
		    SeedSet seedSet = new SeedSet();
		    seedSet.setParentSeedSet(sessionScope.getSeeding().getSeedSet());
		    seedSet.add(search, sessionScope);
		    seedSet.performSeeding(sessionScope, true);*/
		    return null;
	    }
	}
}
