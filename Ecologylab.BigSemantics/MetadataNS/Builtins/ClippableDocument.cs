//
//  ClippableDocument.cs
//  s.im.pl serialization
//
//  Generated by DotNetTranslator on 11/10/10.
//  Copyright 2010 Interface Ecology Lab. 
//

using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using Ecologylab.BigSemantics.MetaMetadataNS;
using Ecologylab.BigSemantics.MetadataNS.Builtins.Declarations;
using Ecologylab.BigSemantics.MetadataNS.Scalar;
using Simpl.Serialization.Attributes;

namespace Ecologylab.BigSemantics.MetadataNS.Builtins
{
	[SimplInherit]
	public class ClippableDocument : ClippableDocumentDeclaration
	{
        public static readonly int									INITIAL_CAPACITY	= 2;

		public ClippableDocument() { }

        public ClippableDocument(MetaMetadataCompositeField mmd) : base(mmd) { }

        public List<IClipping<Metadata>> GetClippingsThisIsIn()
	    {
		    List<IClipping<Metadata>> result = this.ClippingsThisIsIn;
		    if (result == null)
		    {
                result = new List<IClipping<Metadata>>(INITIAL_CAPACITY);
			    this.ClippingsThisIsIn = result;
		    }
		    return result;
	    }

        protected void AddClipping(IClipping<Metadata> clipping)
	    {
            List<IClipping<Metadata>> clippings = GetClippingsThisIsIn();
		    clippings.Add(clipping);
	    }
	}
}
