//
// CreativeActDeclaration.cs
// s.im.pl serialization
//
// Generated by MetaMetadataDotNetTranslator.
// Copyright 2014 Interface Ecology Lab. 
//


using Ecologylab.BigSemantics.MetaMetadataNS;
using Ecologylab.BigSemantics.MetadataNS;
using Ecologylab.BigSemantics.MetadataNS.Builtins;
using Ecologylab.BigSemantics.MetadataNS.Scalar;
using Ecologylab.Collections;
using Simpl.Fundamental.Generic;
using Simpl.Serialization;
using Simpl.Serialization.Attributes;
using System;
using System.Collections;
using System.Collections.Generic;

namespace Ecologylab.BigSemantics.MetadataNS.Builtins.Declarations 
{
	[SimplInherit]
	public class CreativeActDeclaration : Metadata
	{
		[SimplScalar]
		private MetadataInteger action;

		[SimplComposite]
		//[SimplWrap]
		//[SimplScope("repository_documents")]
		[MmName("creator")]
		private Document creator;

		[SimplScalar]
		private MetadataDate time;

		public CreativeActDeclaration()
		{ }

		public CreativeActDeclaration(MetaMetadataCompositeField mmd) : base(mmd) { }


		public MetadataInteger Action
		{
			get{return action;}
			set
			{
				if (this.action != value)
				{
					this.action = value;
					// TODO we need to implement our property change notification mechanism.
				}
			}
		}

		public Document Creator
		{
			get{return creator;}
			set
			{
				if (this.creator != value)
				{
					this.creator = value;
					// TODO we need to implement our property change notification mechanism.
				}
			}
		}

		public MetadataDate Time
		{
			get{return time;}
			set
			{
				if (this.time != value)
				{
					this.time = value;
					// TODO we need to implement our property change notification mechanism.
				}
			}
		}
	}
}
