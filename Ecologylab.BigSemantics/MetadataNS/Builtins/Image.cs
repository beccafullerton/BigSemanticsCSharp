//
//  Image.cs
//  s.im.pl serialization
//
//  Generated by DotNetTranslator on 02/02/11.
//  Copyright 2011 Interface Ecology Lab. 
//

using System;
using System.Collections.Generic;
using Ecologylab.BigSemantics.Collecting;
using Ecologylab.BigSemantics.MetaMetadataNS;
using Ecologylab.BigSemantics.MetadataNS.Builtins.Declarations;
using Simpl.Fundamental.Net;
using Simpl.Serialization.Attributes;
using Ecologylab.BigSemantics.MetadataNS.Scalar;
using Ecologylab.BigSemantics.MetadataNS;

namespace Ecologylab.BigSemantics.MetadataNS.Builtins 
{
	[SimplInherit]
	public class Image : ImageDeclaration
	{

		public Image()
		{ }

        public Image(MetaMetadataCompositeField metaMetadata) : base(metaMetadata) { }

        public ImageClipping ConstructClipping(Document sourceDocument, Document outlink, String caption, String context)
	    {
		    var result	= new ImageClipping(SemanticsSessionScope.Get.ImageClippingMetaMetadata, this, sourceDocument, outlink, caption, context);
		    this.AddClipping(result);
		
		    return result;
	    }

        public override bool IsImage
        {
            get { return true; }
        }

        public ParsedUri ImageLocation
        {
            get
            {
                //ParsedUri result = null;       // System.Windows.Media.ImageSource || Windows.UI.Xaml.Media.ImageSource
                //return new ParsedUri((this.LocalLocation != null) ? this.LocalLocation.Value.AbsoluteUri : this.Location.Value.AbsoluteUri);
                return this.Location.Value;
            }
        }
	}
}
