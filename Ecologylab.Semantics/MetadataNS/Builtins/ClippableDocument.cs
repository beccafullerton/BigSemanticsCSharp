//
//  ClippableDocument.cs
//  s.im.pl serialization
//
//  Generated by DotNetTranslator on 11/10/10.
//  Copyright 2010 Interface Ecology Lab. 
//

using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using Ecologylab.Semantics.MetaMetadataNS;
using Ecologylab.Semantics.MetadataNS.Builtins.Declarations;
using Ecologylab.Semantics.MetadataNS.Scalar;
using Simpl.Serialization.Attributes;

namespace Ecologylab.Semantics.MetadataNS.Builtins
{
	[SimplInherit]
	public class ClippableDocument<ME> : ClippableDocumentDeclaration<ME> where ME : ClippableDocument<ME>
	{
        public static readonly int									INITIAL_CAPACITY	= 2;
		/// <summary>
		/// missing java doc comments or could not find the source file.
		/// </summary>
		[MmName("caption")]
		[SimplScalar]
		private MetadataString caption;

		public ClippableDocument() { }

        public ClippableDocument(MetaMetadataCompositeField mmd) : base(mmd) { }

        public List<MediaClipping<ME>> GetClippingsThisIsIn()
	    {
		    List<MediaClipping<ME>> result = this.ClippingsThisIsIn;
		    if (result == null)
		    {
			    result = new List<MediaClipping<ME>>(INITIAL_CAPACITY);
			    this.ClippingsThisIsIn = result;
		    }
		    return result;
	    }

        protected void AddClipping(MediaClipping<ME> clipping)
	    {
		    List<MediaClipping<ME>> clippings = GetClippingsThisIsIn();
		    clippings.Add(clipping);
	    }
	}
}
