//
//  CreateAndVisualizeTextSurrogateSemanticAction.cs
//  s.im.pl serialization
//
//  Generated by DotNetTranslator on 11/16/10.
//  Copyright 2010 Interface Ecology Lab. 
//

using System;
using System.Collections.Generic;
using Simpl.Serialization.Attributes;
using ecologylab.semantics.metadata.builtins;
using ecologylab.semantics.metadata.scalar;
using ecologylab.semantics.namesandnums;
using ecologylabSemantics.ecologylab.semantics.actions;

namespace ecologylab.semantics.actions 
{
	/// <summary>
	/// missing java doc comments or could not find the source file.
	/// </summary>
	[SimplInherit]
	[SimplTag("create_and_visualize_text_surrogate")]
    public class CreateAndVisualizeTextSurrogateSemanticOperation : SemanticOperation
	{
        public CreateAndVisualizeTextSurrogateSemanticOperation()
		{ }

	    public override String GetOperationName()
	    {
		    return SemanticOperationStandardMethods.CREATE_AND_VISUALIZE_TEXT_SURROGATE;
	    }

	    public override void HandleError()
	    {
	    }

	    static readonly int MAX_WORDS_IN_GIST = 8;
	    private String CreateGist(String text)
	    {
		    String[] words = text.Split(' ');
		    String returnString = "";
		    int wordCount = 0;
		    foreach(String word in words)
		    {
			    if(wordCount > 0)
			        returnString += " ";
			    returnString += word;
			    wordCount++;
			    if(wordCount >= MAX_WORDS_IN_GIST)
				    break;
		    }
		    return returnString;
	    }
	
	    public override Object Perform(Object obj)
	    {
		    Console.WriteLine("Adding text clipping");
		    bool isSemanticText = GetArgumentBoolean(SemanticOperationNamedArguments.SEMANTIC_TEXT, false);
		    
            Object contextObject = GetArgumentObject(SemanticOperationNamedArguments.TEXT);
            String context = (contextObject != null) ? contextObject.ToString() : null; 

		    // TODO use html context -- need methods to strip tags to set regular context from it.
		    Object htmlContextObject = GetArgumentObject(SemanticOperationNamedArguments.HTML_CONTEXT);
            String htmlContext = (htmlContextObject != null) ? htmlContextObject.ToString() : null;
            
            if (context != null)
		    {
			    Document sourceDocument = ResolveSourceDocument();
			    //We will do something smarter here later when we have interest vectors.
                TextClipping textClipping = new TextClipping(sessionScope.MetaMetadataRepository.GetMMByName(DocumentParserTagNames.TextTag));
		        //textClipping.setText(createGist(context));
			    textClipping.Text = new MetadataString(context);
			    textClipping.Context = new MetadataString(context);

			    textClipping.SourceDoc = sourceDocument;
                
                sourceDocument.AddClipping(textClipping);
		    }
		    return null;
	    }
	}
}
