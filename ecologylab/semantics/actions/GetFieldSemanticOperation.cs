//
//  GetFieldSemanticAction.cs
//  s.im.pl serialization
//
//  Generated by DotNetTranslator on 11/16/10.
//  Copyright 2010 Interface Ecology Lab. 
//

using System;
using System.Collections.Generic;
using System.Reflection;
using Simpl.Fundamental.Generic;
using Simpl.Serialization;
using Simpl.Serialization.Attributes;
using ecologylabSemantics.ecologylab.semantics.actions;

namespace ecologylab.semantics.actions 
{
    /// <summary>
    /// missing java doc comments or could not find the source file.
    /// </summary>
    [SimplInherit]
    [SimplTag("get_field")]
    public class GetFieldSemanticOperation : SemanticOperation 
    {
        public GetFieldSemanticOperation()
        {
        }

        private static Dictionary<String, PropertyInfo> cachedGetterPropertys = new Dictionary<string, PropertyInfo>();

        private PropertyInfo GetGetterProperty(Type context, String getterName)
        {
            String id = context + "." + getterName;
            if (cachedGetterPropertys.ContainsKey(id))
                return cachedGetterPropertys[id];

            PropertyInfo method = ReflectionTools.GetProperty(context, getterName);
            cachedGetterPropertys.Add(id, method);
            return method;
        }

        public override string GetOperationName()
        {
            return SemanticOperationStandardMethods.GetFieldAction;
        }

        public override void HandleError()
        {
        }

        public override object Perform(object obj)
        {
            String returnObjectName = GetReturnObjectName();
            String getterName = XmlTools.CamelCaseFromXMLElementName(returnObjectName, true);
            PropertyInfo method = GetGetterProperty(obj.GetType(), getterName);
            if (method == null)
            {
                Console.WriteLine("get_field failed: object={1}, getter={2}()", obj, getterName);
            }
            else
                try
                {
                    return method.GetValue(obj, null);
                }
                catch (Exception e)
                {
                    Console.WriteLine(System.Environment.StackTrace);
                    Console.WriteLine("get_field failed: object={1}, getter={2}()", obj, getterName);
                }
            return null;
        }
    }
}
