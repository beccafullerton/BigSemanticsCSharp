//
//  NestedSemanticAction.cs
//  s.im.pl serialization
//
//  Generated by DotNetTranslator on 11/16/10.
//  Copyright 2010 Interface Ecology Lab. 
//

using System;
using System.Collections.Generic;
using Simpl.Serialization.Attributes;

namespace ecologylab.semantics.actions 
{
    /// <summary>
    /// This class is the base class for semantic actions which can have nested semantic actions inside
    /// them. Right now only FOREACH and IF semantic actions can have other semantic actions nested
    /// inside them.
    /// </summary>
    [SimplInherit]
    public class NestedSemanticOperation : SemanticOperation
    {
        /// <summary>
        /// List of nested semantic actions.
        /// </summary>
        [SimplNoWrap]
        [SimplCollection]
        [SimplScope("semantic_action_translation_scope")]
        private List<SemanticOperation> nestedSemanticActionList;

        public NestedSemanticOperation()
        {
        }

        public List<SemanticOperation> NestedSemanticActionList
        {
            get { return nestedSemanticActionList; }
            set { nestedSemanticActionList = value; }
        }

        public override string GetOperationName()
        {
            return null;
        }

        public override void HandleError()
        {
        }

        public override object Perform(object obj)
        {
            return null;
        }

        public override void SetNestedOperationState(String name, Object value)
        {
            foreach (SemanticOperation action in nestedSemanticActionList)
            {
                SemanticOperationHandler handler = SemanticOperationHandler;
                action.SemanticOperationHandler = handler;
	            handler.SetOperationState(action, name, value);
                action.SetNestedOperationState(name, value);
            }
        }
    }
}
