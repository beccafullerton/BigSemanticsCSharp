//
// DocumentDeclaration.cs
// s.im.pl serialization
//
// Generated by MetaMetadataDotNetTranslator.
// Copyright 2012 Interface Ecology Lab. 
//


using Simpl.Fundamental.Generic;
using Simpl.Fundamental.Net;
using Simpl.Serialization;
using Simpl.Serialization.Attributes;
using System;
using System.Collections;
using System.Collections.Generic;
using ecologylab.collections;
using ecologylab.semantics.metadata;
using ecologylab.semantics.metadata.builtins;
using ecologylab.semantics.metadata.scalar;
using ecologylab.semantics.metametadata;

namespace ecologylab.semantics.metadata.builtins.declarations 
{
	/// <summary>
	/// The Document Class
	/// </summary>
	[SimplInherit]
	public class DocumentDeclaration : Metadata
	{
		/// <summary>
		/// The Title of the Document
		/// </summary>
		[SimplScalar]
		[SimplHints(new Hint[] {Hint.XmlLeaf})]
		private MetadataString title;

		[SimplScalar]
		[SimplHints(new Hint[] {Hint.XmlLeaf})]
		[SimplOtherTags(new String[] {"abstract_field"})]
		private MetadataString description;

		/// <summary>
		/// The document's actual location.
		/// </summary>
		[SimplScalar]
		private MetadataParsedURL location;

		/// <summary>
		/// Relative location of a local copy of the document.
		/// </summary>
		[SimplScalar]
		private MetadataParsedURL localLocation;

		[SimplCollection("location")]
		[MmName("additional_locations")]
		private List<ecologylab.semantics.metadata.scalar.MetadataParsedURL> additionalLocations;

		public DocumentDeclaration()
		{ }

		public DocumentDeclaration(MetaMetadataCompositeField mmd) : base(mmd) { }


		public MetadataString Title
		{
			get{return title;}
			set
			{
				if (this.title != value)
				{
					this.title = value;
					this.RaisePropertyChanged( () => this.Title );
				}
			}
		}

		public MetadataString Description
		{
			get{return description;}
			set
			{
				if (this.description != value)
				{
					this.description = value;
					this.RaisePropertyChanged( () => this.Description );
				}
			}
		}

		public MetadataParsedURL Location
		{
			get{return location;}
			set
			{
				if (this.location != value)
				{
					this.location = value;
					this.RaisePropertyChanged( () => this.Location );
				}
			}
		}

		public MetadataParsedURL LocalLocation
		{
			get{return localLocation;}
			set
			{
				if (this.localLocation != value)
				{
					this.localLocation = value;
					this.RaisePropertyChanged( () => this.LocalLocation );
				}
			}
		}

		public List<ecologylab.semantics.metadata.scalar.MetadataParsedURL> AdditionalLocations
		{
			get{return additionalLocations;}
			set
			{
				if (this.additionalLocations != value)
				{
					this.additionalLocations = value;
					this.RaisePropertyChanged( () => this.AdditionalLocations );
				}
			}
		}
	}
}
