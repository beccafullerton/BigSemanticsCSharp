//
//  Argument.cs
//  s.im.pl serialization
//
//  Generated by DotNetTranslator on 11/16/10.
//  Copyright 2010 Interface Ecology Lab. 
//

using System;
using System.Collections.Generic;
using Simpl.Serialization.Attributes;
using Simpl.Serialization;
using Simpl.Serialization.Types.Element;


namespace ecologylab.semantics.metametadata 
{
	/// <summary>
	/// missing java doc comments or could not find the source file.
	/// </summary>
	[SimplTag("arg")]
	public class Argument : ElementState, IMappable<String>
	{
		/// <summary>
		/// missing java doc comments or could not find the source file.
		/// </summary>
		[SimplScalar]
		private String value;

        ///<summary>
	    /// The value of the argument if the first value is null.
	    ///</summary>
        [SimplScalar]
	    private String altValue;

		/// <summary>
		/// missing java doc comments or could not find the source file.
		/// </summary>
		[SimplScalar]
		private String name;

		/// <summary>
		/// missing java doc comments or could not find the source file.
		/// </summary>
		[SimplScalar]
		private String check;

		/// <summary>
		/// missing java doc comments or could not find the source file.
		/// </summary>
		[SimplScalar]
		private String context;

		/// <summary>
		/// missing java doc comments or could not find the source file.
		/// </summary>
		[SimplScalar]
		private Boolean isNested;

		public Argument()
		{ }

		public String Value
		{
			get{return value;}
			set{this.value = value;}
		}

		public String Name
		{
			get{return name;}
			set{name = value;}
		}

		public String Check
		{
			get{return check;}
			set{check = value;}
		}

		public String Context
		{
			get{return context;}
			set{context = value;}
		}

		public Boolean IsNested
		{
			get{return isNested;}
			set{isNested = value;}
		}

		public String Key()
		{
            return name;
		}

	    public String AltValue
	    {
            get { return altValue; }
            set { altValue = value; }
	    }
	}
}
