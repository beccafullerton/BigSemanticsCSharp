//
//  Artist.cs
//  s.im.pl serialization
//
//  Generated by DotNetTranslator on 04/01/11.
//  Copyright 2011 Interface Ecology Lab. 
//

using System;
using System.Collections.Generic;
using Simpl.Serialization.Attributes;
using ecologylab.semantics.metadata.scalar;
using ecologylab.semantics.metadata;
using ecologylab.semantics.generated.library.publication;

namespace ecologylab.semantics.generated.library.artwork 
{
	/// <summary>
	/// This is a generated code. DO NOT edit or modify it.
	/// @author MetadataCompiler
	/// </summary>
	[SimplDescriptorClasses(new Type[] { typeof(MetadataClassDescriptor), typeof(MetadataFieldDescriptor) })]
	[SimplInherit]
	public class Artist : Author
	{
		/// <summary>
		/// missing java doc comments or could not find the source file.
		/// </summary>
		[SimplCollection("artwork")]
		[SimplTag("artworks")]
		[mm_name("artworks")]
		private List<Artwork> artworks;

		public Artist()
		{ }

		public List<Artwork> Artworks
		{
			get{return artworks;}
			set{artworks = value;}
		}

        public override string ToString()
        {
            return (this.Name != null)? Name.Value : base.ToString();
        }
	}
}
