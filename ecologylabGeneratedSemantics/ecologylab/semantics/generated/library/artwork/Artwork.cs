//
// Artwork.cs
// s.im.pl serialization
//
// Generated by MetaMetadataDotNetTranslator on 01/04/12.
// Copyright 2012 Interface Ecology Lab. 
//


using Simpl.Fundamental.Generic;
using Simpl.Serialization;
using Simpl.Serialization.Attributes;
using System;
using System.Collections;
using System.Collections.Generic;
using ecologylab.collections;
using ecologylab.semantics.generated.library.artwork;
using ecologylab.semantics.metadata;
using ecologylab.semantics.metadata.builtins;
using ecologylab.semantics.metadata.scalar;
using ecologylab.semantics.metametadata;

namespace ecologylab.semantics.generated.library.artwork 
{
	/// <summary>
	/// Artwork class
	/// </summary>
	[SimplInherit]
	public class Artwork : CompoundDocument
	{
		/// <summary>
		/// Set of artists.
		/// </summary>
		[SimplCollection("artist")]
		[MmName("artists")]
		private List<Artist> artists;

		/// <summary>
		/// Medium on which the work is done.
		/// </summary>
		[SimplScalar]
		private MetadataString medium;

		/// <summary>
		/// Abstract of the work.
		/// </summary>
		[SimplScalar]
		[SimplTag("abstract")]
		private MetadataString abstractField;

		/// <summary>
		/// Year the work was created.
		/// </summary>
		[SimplScalar]
		private MetadataString year;

		[SimplScalar]
		private MetadataString dimensions;

		public Artwork()
		{ }

		public Artwork(MetaMetadataCompositeField mmd) : base(mmd) { }


		public List<Artist> Artists
		{
			get{return artists;}
			set
			{
				if (this.artists != value)
				{
					this.artists = value;
					this.RaisePropertyChanged( () => this.Artists );
				}
			}
		}

		public MetadataString Medium
		{
			get{return medium;}
			set
			{
				if (this.medium != value)
				{
					this.medium = value;
					this.RaisePropertyChanged( () => this.Medium );
				}
			}
		}

		public MetadataString AbstractField
		{
			get{return abstractField;}
			set
			{
				if (this.abstractField != value)
				{
					this.abstractField = value;
					this.RaisePropertyChanged( () => this.AbstractField );
				}
			}
		}

		public MetadataString Year
		{
			get{return year;}
			set
			{
				if (this.year != value)
				{
					this.year = value;
					this.RaisePropertyChanged( () => this.Year );
				}
			}
		}

		public MetadataString Dimensions
		{
			get{return dimensions;}
			set
			{
				if (this.dimensions != value)
				{
					this.dimensions = value;
					this.RaisePropertyChanged( () => this.Dimensions );
				}
			}
		}
	}
}
