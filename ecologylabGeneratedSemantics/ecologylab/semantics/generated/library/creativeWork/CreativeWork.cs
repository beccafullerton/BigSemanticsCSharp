//
// CreativeWork.cs
// s.im.pl serialization
//
// Generated by MetaMetadataDotNetTranslator on 01/04/12.
// Copyright 2012 Interface Ecology Lab. 
//


using Simpl.Fundamental.Generic;
using Simpl.Serialization;
using Simpl.Serialization.Attributes;
using System;
using System.Collections;
using System.Collections.Generic;
using ecologylab.collections;
using ecologylab.semantics.generated.library.creativeWork;
using ecologylab.semantics.metadata;
using ecologylab.semantics.metadata.builtins;
using ecologylab.semantics.metadata.scalar;
using ecologylab.semantics.metametadata;

namespace ecologylab.semantics.generated.library.creativeWork 
{
	[SimplInherit]
	public class CreativeWork : CompoundDocument
	{
		[SimplScalar]
		[SimplHints(new Hint[] {Hint.XmlLeaf})]
		[SimplTag("abstract")]
		private MetadataString abstractField;

		/// <summary>
		/// Set of authors.
		/// </summary>
		[SimplCollection("author")]
		[MmName("authors")]
		private List<Author> authors;

		[SimplScalar]
		[SimplOtherTags(new String[] {"year_of_publication"})]
		private MetadataInteger year;

		public CreativeWork()
		{ }

		public CreativeWork(MetaMetadataCompositeField mmd) : base(mmd) { }


		public MetadataString AbstractField
		{
			get{return abstractField;}
			set
			{
				if (this.abstractField != value)
				{
					this.abstractField = value;
					this.RaisePropertyChanged( () => this.AbstractField );
				}
			}
		}

		public List<Author> Authors
		{
			get{return authors;}
			set
			{
				if (this.authors != value)
				{
					this.authors = value;
					this.RaisePropertyChanged( () => this.Authors );
				}
			}
		}

		public MetadataInteger Year
		{
			get{return year;}
			set
			{
				if (this.year != value)
				{
					this.year = value;
					this.RaisePropertyChanged( () => this.Year );
				}
			}
		}
	}
}
