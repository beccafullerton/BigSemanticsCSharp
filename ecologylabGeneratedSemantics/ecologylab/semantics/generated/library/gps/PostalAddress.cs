//
// PostalAddress.cs
// s.im.pl serialization
//
// Generated by MetaMetadataDotNetTranslator.
// Copyright 2012 Interface Ecology Lab. 
//


using Simpl.Fundamental.Generic;
using Simpl.Serialization;
using Simpl.Serialization.Attributes;
using System;
using System.Collections;
using System.Collections.Generic;
using ecologylab.collections;
using ecologylab.semantics.generated.library.gps;
using ecologylab.semantics.metadata.builtins;
using ecologylab.semantics.metadata.scalar;
using ecologylab.semantics.metametadata;

namespace ecologylab.semantics.generated.library.gps 
{
	/// <summary>
	/// Resembles a schema.org PostalAddress, but is a mixin, not extending document. Also adds the county field.
	/// </summary>
	[SimplInherit]
	public class PostalAddress : ContactPoint
	{
		/// <summary>
		/// This is really the city.
		/// </summary>
		[SimplScalar]
		private MetadataString locality;

		/// <summary>
		/// This is state in the U.S., province in Canada, and varies internationaaly.
		/// </summary>
		[SimplScalar]
		private MetadataString region;

		/// <summary>
		/// The internationalized version of zip code.
		/// </summary>
		[SimplScalar]
		private MetadataString postalCode;

		[SimplScalar]
		private MetadataString county;

		[SimplScalar]
		private MetadataString country;

		public PostalAddress()
		{ }

		public PostalAddress(MetaMetadataCompositeField mmd) : base(mmd) { }


		public MetadataString Locality
		{
			get{return locality;}
			set
			{
				if (this.locality != value)
				{
					this.locality = value;
					this.RaisePropertyChanged( () => this.Locality );
				}
			}
		}

		public MetadataString Region
		{
			get{return region;}
			set
			{
				if (this.region != value)
				{
					this.region = value;
					this.RaisePropertyChanged( () => this.Region );
				}
			}
		}

		public MetadataString PostalCode
		{
			get{return postalCode;}
			set
			{
				if (this.postalCode != value)
				{
					this.postalCode = value;
					this.RaisePropertyChanged( () => this.PostalCode );
				}
			}
		}

		public MetadataString County
		{
			get{return county;}
			set
			{
				if (this.county != value)
				{
					this.county = value;
					this.RaisePropertyChanged( () => this.County );
				}
			}
		}

		public MetadataString Country
		{
			get{return country;}
			set
			{
				if (this.country != value)
				{
					this.country = value;
					this.RaisePropertyChanged( () => this.Country );
				}
			}
		}
	}
}
