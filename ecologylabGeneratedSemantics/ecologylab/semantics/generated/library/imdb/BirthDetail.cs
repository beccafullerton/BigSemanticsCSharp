//
// BirthDetail.cs
// s.im.pl serialization
//
// Generated by MetaMetadataDotNetTranslator.
// Copyright 2012 Interface Ecology Lab. 
//


using Simpl.Fundamental.Generic;
using Simpl.Fundamental.Net;
using Simpl.Serialization;
using Simpl.Serialization.Attributes;
using System;
using System.Collections;
using System.Collections.Generic;
using ecologylab.collections;
using ecologylab.semantics.metadata.builtins;
using ecologylab.semantics.metadata.scalar;
using ecologylab.semantics.metametadata;

namespace ecologylab.semantics.generated.library.imdb 
{
	/// <summary>
	/// Metadata for storing details of birth (date and place) of people
	/// </summary>
	[SimplInherit]
	public class BirthDetail : CompoundDocument
	{
		[SimplScalar]
		private MetadataString dayOfBirth;

		[SimplScalar]
		private MetadataString yearOfBirth;

		[SimplScalar]
		private MetadataString placeOfBirth;

		[SimplScalar]
		private MetadataParsedURL dayOfBirthLink;

		[SimplScalar]
		private MetadataParsedURL yearOfBirthLink;

		[SimplScalar]
		private MetadataParsedURL placeOfBirthLink;

		public BirthDetail()
		{ }

		public BirthDetail(MetaMetadataCompositeField mmd) : base(mmd) { }


		public MetadataString DayOfBirth
		{
			get{return dayOfBirth;}
			set
			{
				if (this.dayOfBirth != value)
				{
					this.dayOfBirth = value;
					this.RaisePropertyChanged( () => this.DayOfBirth );
				}
			}
		}

		public MetadataString YearOfBirth
		{
			get{return yearOfBirth;}
			set
			{
				if (this.yearOfBirth != value)
				{
					this.yearOfBirth = value;
					this.RaisePropertyChanged( () => this.YearOfBirth );
				}
			}
		}

		public MetadataString PlaceOfBirth
		{
			get{return placeOfBirth;}
			set
			{
				if (this.placeOfBirth != value)
				{
					this.placeOfBirth = value;
					this.RaisePropertyChanged( () => this.PlaceOfBirth );
				}
			}
		}

		public MetadataParsedURL DayOfBirthLink
		{
			get{return dayOfBirthLink;}
			set
			{
				if (this.dayOfBirthLink != value)
				{
					this.dayOfBirthLink = value;
					this.RaisePropertyChanged( () => this.DayOfBirthLink );
				}
			}
		}

		public MetadataParsedURL YearOfBirthLink
		{
			get{return yearOfBirthLink;}
			set
			{
				if (this.yearOfBirthLink != value)
				{
					this.yearOfBirthLink = value;
					this.RaisePropertyChanged( () => this.YearOfBirthLink );
				}
			}
		}

		public MetadataParsedURL PlaceOfBirthLink
		{
			get{return placeOfBirthLink;}
			set
			{
				if (this.placeOfBirthLink != value)
				{
					this.placeOfBirthLink = value;
					this.RaisePropertyChanged( () => this.PlaceOfBirthLink );
				}
			}
		}
	}
}
