//
// ImdbTitle.cs
// s.im.pl serialization
//
// Generated by MetaMetadataDotNetTranslator.
// Copyright 2012 Interface Ecology Lab. 
//


using Simpl.Fundamental.Generic;
using Simpl.Fundamental.Net;
using Simpl.Serialization;
using Simpl.Serialization.Attributes;
using System;
using System.Collections;
using System.Collections.Generic;
using ecologylab.collections;
using ecologylab.semantics.generated.library.imdb;
using ecologylab.semantics.metadata;
using ecologylab.semantics.metadata.builtins;
using ecologylab.semantics.metadata.scalar;
using ecologylab.semantics.metametadata;

namespace ecologylab.semantics.generated.library.imdb 
{
	/// <summary>
	/// IMDB metadata
	/// </summary>
	[SimplInherit]
	public class ImdbTitle : CompoundDocument
	{
		[SimplScalar]
		private MetadataString yearReleased;

		[SimplCollection("person_details")]
		[MmName("directors")]
		private List<PersonDetails> directors;

		[SimplCollection("person_details")]
		[MmName("writers")]
		private List<PersonDetails> writers;

		[SimplCollection("cast_member")]
		[MmName("cast")]
		private List<CastMember> cast;

		[SimplScalar]
		private MetadataString rating;

		[SimplScalar]
		private MetadataString releaseDate;

		[SimplCollection("genre")]
		[MmName("genres")]
		private List<Genre> genres;

		[SimplScalar]
		private MetadataString plot;

		[SimplScalar]
		private MetadataString tagline;

		[SimplCollection("image")]
		[MmName("title_photos")]
		private List<Image> titlePhotos;

		[SimplScalar]
		private MetadataParsedURL posterImg;

		public ImdbTitle()
		{ }

		public ImdbTitle(MetaMetadataCompositeField mmd) : base(mmd) { }


		public MetadataString YearReleased
		{
			get{return yearReleased;}
			set
			{
				if (this.yearReleased != value)
				{
					this.yearReleased = value;
					this.RaisePropertyChanged( () => this.YearReleased );
				}
			}
		}

		public List<PersonDetails> Directors
		{
			get{return directors;}
			set
			{
				if (this.directors != value)
				{
					this.directors = value;
					this.RaisePropertyChanged( () => this.Directors );
				}
			}
		}

		public List<PersonDetails> Writers
		{
			get{return writers;}
			set
			{
				if (this.writers != value)
				{
					this.writers = value;
					this.RaisePropertyChanged( () => this.Writers );
				}
			}
		}

		public List<CastMember> Cast
		{
			get{return cast;}
			set
			{
				if (this.cast != value)
				{
					this.cast = value;
					this.RaisePropertyChanged( () => this.Cast );
				}
			}
		}

		public MetadataString Rating
		{
			get{return rating;}
			set
			{
				if (this.rating != value)
				{
					this.rating = value;
					this.RaisePropertyChanged( () => this.Rating );
				}
			}
		}

		public MetadataString ReleaseDate
		{
			get{return releaseDate;}
			set
			{
				if (this.releaseDate != value)
				{
					this.releaseDate = value;
					this.RaisePropertyChanged( () => this.ReleaseDate );
				}
			}
		}

		public List<Genre> Genres
		{
			get{return genres;}
			set
			{
				if (this.genres != value)
				{
					this.genres = value;
					this.RaisePropertyChanged( () => this.Genres );
				}
			}
		}

		public MetadataString Plot
		{
			get{return plot;}
			set
			{
				if (this.plot != value)
				{
					this.plot = value;
					this.RaisePropertyChanged( () => this.Plot );
				}
			}
		}

		public MetadataString Tagline
		{
			get{return tagline;}
			set
			{
				if (this.tagline != value)
				{
					this.tagline = value;
					this.RaisePropertyChanged( () => this.Tagline );
				}
			}
		}

		public List<Image> TitlePhotos
		{
			get{return titlePhotos;}
			set
			{
				if (this.titlePhotos != value)
				{
					this.titlePhotos = value;
					this.RaisePropertyChanged( () => this.TitlePhotos );
				}
			}
		}

		public MetadataParsedURL PosterImg
		{
			get{return posterImg;}
			set
			{
				if (this.posterImg != value)
				{
					this.posterImg = value;
					this.RaisePropertyChanged( () => this.PosterImg );
				}
			}
		}
	}
}
