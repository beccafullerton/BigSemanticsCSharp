//
// Outline.cs
// s.im.pl serialization
//
// Generated by MetaMetadataDotNetTranslator.
// Copyright 2012 Interface Ecology Lab. 
//


using Simpl.Fundamental.Generic;
using Simpl.Fundamental.Net;
using Simpl.Serialization;
using Simpl.Serialization.Attributes;
using System;
using System.Collections;
using System.Collections.Generic;
using ecologylab.collections;
using ecologylab.semantics.generated.library.opml;
using ecologylab.semantics.metadata;
using ecologylab.semantics.metadata.builtins;
using ecologylab.semantics.metadata.scalar;
using ecologylab.semantics.metametadata;

namespace ecologylab.semantics.generated.library.opml 
{
	[SimplInherit]
	public class Outline : Metadata
	{
		[SimplScalar]
		private MetadataString text;

		[SimplScalar]
		private MetadataString title;

		[SimplScalar]
		[SimplTag("htmlUrl")]
		private MetadataParsedURL htmlUrl;

		[SimplCollection("outline")]
		[SimplNoWrap]
		[MmName("outlines")]
		private List<Outline> outlines;

		[SimplScalar]
		[SimplTag("xmlUrl")]
		private MetadataParsedURL xmlUrl;

		[SimplScalar]
		private MetadataString type;

		public Outline()
		{ }

		public Outline(MetaMetadataCompositeField mmd) : base(mmd) { }


		public MetadataString Text
		{
			get{return text;}
			set
			{
				if (this.text != value)
				{
					this.text = value;
					this.RaisePropertyChanged( () => this.Text );
				}
			}
		}

		public MetadataString Title
		{
			get{return title;}
			set
			{
				if (this.title != value)
				{
					this.title = value;
					this.RaisePropertyChanged( () => this.Title );
				}
			}
		}

		public MetadataParsedURL HtmlUrl
		{
			get{return htmlUrl;}
			set
			{
				if (this.htmlUrl != value)
				{
					this.htmlUrl = value;
					this.RaisePropertyChanged( () => this.HtmlUrl );
				}
			}
		}

		public List<Outline> Outlines
		{
			get{return outlines;}
			set
			{
				if (this.outlines != value)
				{
					this.outlines = value;
					this.RaisePropertyChanged( () => this.Outlines );
				}
			}
		}

		public MetadataParsedURL XmlUrl
		{
			get{return xmlUrl;}
			set
			{
				if (this.xmlUrl != value)
				{
					this.xmlUrl = value;
					this.RaisePropertyChanged( () => this.XmlUrl );
				}
			}
		}

		public MetadataString Type
		{
			get{return type;}
			set
			{
				if (this.type != value)
				{
					this.type = value;
					this.RaisePropertyChanged( () => this.Type );
				}
			}
		}
	}
}
