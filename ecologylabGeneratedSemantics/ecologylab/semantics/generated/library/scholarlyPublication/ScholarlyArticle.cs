//
//  ScholarlyArticle.cs
//  s.im.pl serialization
//
//  Generated by DotNetTranslator on 04/01/11.
//  Copyright 2011 Interface Ecology Lab. 
//

using System;
using System.Collections.Generic;
using Simpl.Serialization.Attributes;
using ecologylab.semantics.metadata.scalar;
using ecologylab.semantics.generated.library;
using ecologylab.semantics.metadata;
using ecologylab.semantics.generated.library.publication;

namespace ecologylab.semantics.generated.library.scholarlyPublication 
{
	/// <summary>
	/// This is a generated code. DO NOT edit or modify it.
	/// @author MetadataCompiler
	/// </summary>
	[SimplDescriptorClasses(new Type[] { typeof(MetadataClassDescriptor), typeof(MetadataFieldDescriptor) })]
	[SimplInherit]
	public class ScholarlyArticle : Pdf
	{
		/// <summary>
		/// citation.cfm
		/// </summary>
		[SimplScalar]
		private MetadataParsedURL metadataPage;

		/// <summary>
		/// missing java doc comments or could not find the source file.
		/// </summary>
		[SimplScalar]
		[SimplTag("abstract")]
		private MetadataString abstractField;

		/// <summary>
		/// Metadata related to where this article was published.
		/// </summary>
		[SimplComposite]
		[mm_name("source")]
		private Source source;

		/// <summary>
		/// Set of authors.
		/// </summary>
		[SimplCollection("author")]
		[SimplTag("authors")]
		[mm_name("authors")]
		private List<Author> authors;

		/// <summary>
		/// The Classifications of this paper.
		/// </summary>
		[SimplCollection("tag")]
		[SimplTag("classifications")]
		[mm_name("classifications")]
		private List<Tag> classifications;

		/// <summary>
		/// Key Terms of the paper.
		/// </summary>
		[SimplCollection("tag")]
		[SimplTag("keywords")]
		[mm_name("keywords")]
		private List<Tag> keywords;

		/// <summary>
		/// missing java doc comments or could not find the source file.
		/// </summary>
		[SimplScalar]
		private MetadataString pages;

		public ScholarlyArticle()
		{ }

		public MetadataParsedURL MetadataPage
		{
			get{return metadataPage;}
			set{metadataPage = value;}
		}

		public MetadataString AbstractField
		{
			get{return abstractField;}
			set{abstractField = value;}
		}

		public Source Source
		{
			get{return source;}
			set{source = value;}
		}

		public List<Author> Authors
		{
			get{return authors;}
			set{authors = value;}
		}

		public List<Tag> Classifications
		{
			get{return classifications;}
			set{classifications = value;}
		}

		public List<Tag> Keywords
		{
			get{return keywords;}
			set{keywords = value;}
		}

		public MetadataString Pages
		{
			get{return pages;}
			set{pages = value;}
		}
	}
}
