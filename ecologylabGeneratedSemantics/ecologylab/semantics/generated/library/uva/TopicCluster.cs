//
// TopicCluster.cs
// s.im.pl serialization
//
// Generated by MetaMetadataDotNetTranslator on 01/04/12.
// Copyright 2012 Interface Ecology Lab. 
//


using Simpl.Fundamental.Generic;
using Simpl.Serialization;
using Simpl.Serialization.Attributes;
using System;
using System.Collections;
using System.Collections.Generic;
using ecologylab.collections;
using ecologylab.semantics.generated.library.uva;
using ecologylab.semantics.metadata;
using ecologylab.semantics.metadata.builtins;
using ecologylab.semantics.metadata.scalar;
using ecologylab.semantics.metametadata;

namespace ecologylab.semantics.generated.library.uva 
{
	[SimplInherit]
	public class TopicCluster : Metadata
	{
		[SimplScalar]
		private MetadataInteger id;

		[SimplCollection("document")]
		[MmName("document_set")]
		private List<Document> documentSet;

		[SimplCollection("keyword_set")]
		[MmName("keyword_sets")]
		private List<KeywordSet> keywordSets;

		[SimplScalar]
		private MetadataInteger x;

		[SimplScalar]
		private MetadataInteger y;

		[SimplScalar]
		private MetadataInteger width;

		[SimplScalar]
		private MetadataInteger height;

		public TopicCluster()
		{ }

		public TopicCluster(MetaMetadataCompositeField mmd) : base(mmd) { }


		public MetadataInteger Id
		{
			get{return id;}
			set
			{
				if (this.id != value)
				{
					this.id = value;
					this.RaisePropertyChanged( () => this.Id );
				}
			}
		}

		public List<Document> DocumentSet
		{
			get{return documentSet;}
			set
			{
				if (this.documentSet != value)
				{
					this.documentSet = value;
					this.RaisePropertyChanged( () => this.DocumentSet );
				}
			}
		}

		public List<KeywordSet> KeywordSets
		{
			get{return keywordSets;}
			set
			{
				if (this.keywordSets != value)
				{
					this.keywordSets = value;
					this.RaisePropertyChanged( () => this.KeywordSets );
				}
			}
		}

		public MetadataInteger X
		{
			get{return x;}
			set
			{
				if (this.x != value)
				{
					this.x = value;
					this.RaisePropertyChanged( () => this.X );
				}
			}
		}

		public MetadataInteger Y
		{
			get{return y;}
			set
			{
				if (this.y != value)
				{
					this.y = value;
					this.RaisePropertyChanged( () => this.Y );
				}
			}
		}

		public MetadataInteger Width
		{
			get{return width;}
			set
			{
				if (this.width != value)
				{
					this.width = value;
					this.RaisePropertyChanged( () => this.Width );
				}
			}
		}

		public MetadataInteger Height
		{
			get{return height;}
			set
			{
				if (this.height != value)
				{
					this.height = value;
					this.RaisePropertyChanged( () => this.Height );
				}
			}
		}
	}
}
