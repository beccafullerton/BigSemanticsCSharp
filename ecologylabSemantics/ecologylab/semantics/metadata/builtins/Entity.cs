//
//  Entity.cs
//  s.im.pl serialization
//
//  Generated by DotNetTranslator on 02/02/11.
//  Copyright 2011 Interface Ecology Lab. 
//

using System;
using System.Collections.Generic;
using Simpl.Serialization.Attributes;
using Simpl.Serialization.Types.Element;
using ecologylab.semantics.metadata.scalar;

using ecologylab.semantics.metadata;

namespace ecologylab.semantics.generated.library 
{
	/// <summary>
	/// missing java doc comments or could not find the source file.
	/// </summary>
	[SimplDescriptorClasses(new Type[] { typeof(MetadataClassDescriptor), typeof(MetadataFieldDescriptor) })]
	[SimplInherit]
	public class Entity<D> : Metadata, IMappable
	{
		/// <summary>
		/// missing java doc comments or could not find the source file.
		/// </summary>
		[SimplScalar]
		[SimplHints(new Hint[] { Hint.XmlLeaf })]
		private MetadataString gist;

		/// <summary>
		/// missing java doc comments or could not find the source file.
		/// </summary>
		[SimplScalar]
		[SimplHints(new Hint[] { Hint.XmlLeaf })]
		private MetadataParsedURL location;

		public Entity()
		{ }

		public MetadataString Gist
		{
			get{return gist;}
			set{gist = value;}
		}

		public MetadataParsedURL Location
		{
			get{return location;}
			set{location = value;}
		}

		public object Key()
		{
			throw new NotImplementedException();
		}
	}
}
