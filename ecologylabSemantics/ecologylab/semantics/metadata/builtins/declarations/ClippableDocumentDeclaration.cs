//
// ClippableDocumentDeclaration.cs
// s.im.pl serialization
//
// Generated by MetaMetadataDotNetTranslator.
// Copyright 2012 Interface Ecology Lab. 
//


using Simpl.Fundamental.Generic;
using Simpl.Serialization;
using Simpl.Serialization.Attributes;
using System;
using System.Collections;
using System.Collections.Generic;
using ecologylab.collections;
using ecologylab.semantics.metadata;
using ecologylab.semantics.metadata.builtins;
using ecologylab.semantics.metadata.scalar;
using ecologylab.semantics.metametadata;

namespace ecologylab.semantics.metadata.builtins.declarations 
{
	[SimplInherit]
	public class ClippableDocumentDeclaration<ME> : Document where ME : ClippableDocument<ME>
	{
		/// <summary>
		/// Clippings based on this.
		/// </summary>
		[SimplCollection]
		[SimplScope("repository_clippings")]
		[MmName("clippings")]
		private List<MediaClipping<ME>> clippings;

		[SimplScalar]
		private MetadataInteger width;

		[SimplScalar]
		private MetadataInteger height;

		public ClippableDocumentDeclaration()
		{ }

		public ClippableDocumentDeclaration(MetaMetadataCompositeField mmd) : base(mmd) { }


		public List<MediaClipping<ME>> Clippings
		{
			get{return clippings;}
			set
			{
				if (this.clippings != value)
				{
					this.clippings = value;
					this.RaisePropertyChanged( () => this.Clippings );
				}
			}
		}

		public MetadataInteger Width
		{
			get{return width;}
			set
			{
				if (this.width != value)
				{
					this.width = value;
					this.RaisePropertyChanged( () => this.Width );
				}
			}
		}

		public MetadataInteger Height
		{
			get{return height;}
			set
			{
				if (this.height != value)
				{
					this.height = value;
					this.RaisePropertyChanged( () => this.Height );
				}
			}
		}
	}
}
