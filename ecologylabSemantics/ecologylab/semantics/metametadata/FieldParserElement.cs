//
// FieldParserElement.cs
// s.im.pl serialization
//
// Generated by DotNetTranslator on 10/14/11.
// Copyright 2011 Interface Ecology Lab. 
//


using Simpl.Fundamental.Generic;
using Simpl.Serialization;
using Simpl.Serialization.Attributes;
using System;
using System.Collections;
using System.Collections.Generic;
using System.Text.RegularExpressions;
using ecologylab.collections;
using ecologylab.serialization;

namespace ecologylab.semantics.metametadata 
{
	[SimplInherit]
	[SimplTag("field_parser")]
	public class FieldParserElement : ElementState
	{
		[SimplScalar]
		[SimplHints(new Hint[] {Hint.XmlAttribute})]
		private String name;

		[SimplScalar]
		[SimplHints(new Hint[] {Hint.XmlAttribute})]
		[SimplOtherTags(new String[] {"regex_split"})]
		private Regex regex;

		[SimplScalar]
		[SimplHints(new Hint[] {Hint.XmlAttribute})]
		private Regex regexFind;

		[SimplScalar]
		[SimplHints(new Hint[] {Hint.XmlAttribute})]
		private Boolean forEachElement;

		[SimplScalar]
		[SimplHints(new Hint[] {Hint.XmlAttribute})]
		private Int32 beginIndex;

		[SimplScalar]
		[SimplHints(new Hint[] {Hint.XmlAttribute})]
		private Int32 endIndex;

		[SimplScalar]
		[SimplHints(new Hint[] {Hint.XmlAttribute})]
		private Boolean trim;

		public FieldParserElement()
		{ }

		public String Name
		{
			get{return name;}
			set{name = value;}
		}

		public Regex Regex
		{
			get{return regex;}
			set{regex = value;}
		}

		public Regex RegexFind
		{
			get{return regexFind;}
			set{regexFind = value;}
		}

		public Boolean ForEachElement
		{
			get{return forEachElement;}
			set{forEachElement = value;}
		}

		public Int32 BeginIndex
		{
			get{return beginIndex;}
			set{beginIndex = value;}
		}

		public Int32 EndIndex
		{
			get{return endIndex;}
			set{endIndex = value;}
		}

		public Boolean Trim
		{
			get{return trim;}
			set{trim = value;}
		}
	}
}
