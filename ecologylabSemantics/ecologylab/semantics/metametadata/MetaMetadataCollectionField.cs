//
//  MetaMetadataCollectionField.cs
//  s.im.pl serialization
//
//  Generated by DotNetTranslator on 11/16/10.
//  Copyright 2010 Interface Ecology Lab. 
//

using System;
using System.Collections.Generic;
using ecologylab.attributes;
using ecologylab.semantics.metadata;

namespace ecologylab.semantics.metametadata 
{
	/// <summary>
	/// missing java doc comments or could not find the source file.
	/// </summary>
	[simpl_inherit]
	[xml_tag("collection")]
	public class MetaMetadataCollectionField : MetaMetadataNestedField
	{
		/// <summary>
		/// missing java doc comments or could not find the source file.
		/// </summary>
		[simpl_scalar]
		private String childTag;

		/// <summary>
		/// missing java doc comments or could not find the source file.
		/// </summary>
		[simpl_scalar]
		private String childType;

		/// <summary>
		/// missing java doc comments or could not find the source file.
		/// </summary>
		[simpl_scalar]
		private Boolean childEntity;

		/// <summary>
		/// missing java doc comments or could not find the source file.
		/// </summary>
		[simpl_scalar]
		private Boolean noWrap;

		public MetaMetadataCollectionField()
		{ }

        protected override string GetMetaMetadataTagToInheritFrom()
        {
            if (childEntity)
                return DocumentParserTagNames.ENTITY;
            else if (childType != null)
                return childType;
            else
                return null;
        }


		public String ChildTag
		{
			get{return childTag;}
			set{childTag = value;}
		}

		public String ChildType
		{
			get{return childType;}
			set{childType = value;}
		}

		public Boolean ChildEntity
		{
			get{return childEntity;}
			set{childEntity = value;}
		}

		public Boolean NoWrap
		{
			get{return noWrap;}
			set{noWrap = value;}
		}
	}
}
