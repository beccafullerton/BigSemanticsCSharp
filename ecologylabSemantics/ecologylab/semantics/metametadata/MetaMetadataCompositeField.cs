//
//  MetaMetadataCompositeField.cs
//  s.im.pl serialization
//
//  Generated by DotNetTranslator on 11/16/10.
//  Copyright 2010 Interface Ecology Lab. 
//

using System;
using System.Collections.Generic;
using ecologylab.attributes;
using ecologylab.semantics.actions;
using ecologylab.semantics.connectors;
using ecologylab.semantics.metadata;

namespace ecologylab.semantics.metametadata 
{
	/// <summary>
	/// missing java doc comments or could not find the source file.
	/// </summary>
	[simpl_inherit]
	[xml_tag("composite")]
	public class MetaMetadataCompositeField : MetaMetadataNestedField
	{
		/// <summary>
		/// missing java doc comments or could not find the source file.
		/// </summary>
		[simpl_scalar]
		private String type;

		/// <summary>
		/// missing java doc comments or could not find the source file.
		/// </summary>
		[simpl_scalar]
		private Boolean entity;

		/// <summary>
		/// missing java doc comments or could not find the source file.
		/// </summary>
		[simpl_scalar]
		private String userAgentName;

		/// <summary>
		/// missing java doc comments or could not find the source file.
		/// </summary>
		[simpl_scalar]
		private String userAgentString;

		/// <summary>
		/// missing java doc comments or could not find the source file.
		/// </summary>
		[simpl_scalar]
		private String parser;

		/// <summary>
		/// missing java doc comments or could not find the source file.
		/// </summary>
		[simpl_collection]
		[simpl_scope("semantic_action_translation_scope")]
		private List<SemanticAction<InfoCollector, SemanticActionHandler>> semanticActions;

		/// <summary>
		/// missing java doc comments or could not find the source file.
		/// </summary>
		[simpl_collection("def_var")]
		[simpl_nowrap]
		private List<DefVar> defVars;

		/// <summary>
		/// missing java doc comments or could not find the source file.
		/// </summary>
		[simpl_scalar]
		private Boolean reloadPageFirstTime;

		public MetaMetadataCompositeField()
		{ }

        protected override string GetMetaMetadataTagToInheritFrom()
        {
            if (Entity)
                return DocumentParserTagNames.ENTITY;
            else if (type != null)
                return type;
            else
                return null;
        }

		public String Type
		{
			get{return type;}
			set{type = value;}
		}

		public Boolean Entity
		{
			get{return entity;}
			set{entity = value;}
		}

		public String UserAgentName
		{
			get{return userAgentName;}
			set{userAgentName = value;}
		}

		public String UserAgentString
		{
			get{return userAgentString;}
			set{userAgentString = value;}
		}

		public String Parser
		{
			get{return parser;}
			set{parser = value;}
		}

        public List<SemanticAction<InfoCollector, SemanticActionHandler>> SemanticActions
		{
			get{return semanticActions;}
			set{semanticActions = value;}
		}

		public List<DefVar> DefVars
		{
			get{return defVars;}
			set{defVars = value;}
		}

		public Boolean ReloadPageFirstTime
		{
			get{return reloadPageFirstTime;}
			set{reloadPageFirstTime = value;}
		}

        public String GetTypeOrName()
        {
            return Type ?? Name;
        }
	}
}
